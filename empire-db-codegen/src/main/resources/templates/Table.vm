#*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *#
package $tablePackageName;

import java.util.ArrayList;
import java.util.List;

import org.apache.empire.data.DataType;
import org.apache.empire.db.DBTableColumn;

import $basePackageName.${dbClassName};

public class $parser.getTableClassName($table.name) extends ${baseTableClassName} {
	// Primary key column
	private List<DBTableColumn> keyColumns= new ArrayList<DBTableColumn>();
	
	// Regular attributes
#foreach ($col in $table.columns)
	public final DBTableColumn C_${col.name};
#end
	
	public $parser.getTableClassName($table.name)(${dbClassName} db) {
		super("$parser.getTableClassName($table.name)", db);
		
		// all columns
#foreach ($col in $table.columns)
		C_${col.name} = super.addColumn("${col.name}", DataType.${parser.getDataType($col)}, ${col.size}, ${col.isRequired()}, ${parser.getDefaultValue($col)});
#end


		// configure primary columns
#foreach ($col in $table.keyColumns)
    	keyColumns.add(C_${col.name});
#end
		super.setPrimaryKey((DBTableColumn[]) keyColumns.toArray());
		
		// Optimistic locking column
#if($parser.hasLockingColumn($table) == true)
		super.setTimestampColumn(C_${table.getTimestampColumn().name});
#else
		/*no locking column specified*/
#end

		// Set cascade delete
		super.setCascadeDelete(true);		
	}
}
